<?php

/**
 * @file
 * Theme and preprocess functions for users.
 */

 use Drupal\user\Entity\User;

/**
 * Implements hook_preprocess_user().
 */
function chr_theme_preprocess_user(&$variables) {
  $path_alias_manager = \Drupal::service('path_alias.manager');

  // Add a custom variable for the user's full name.
  $user = $variables['elements']['#user'];
  //$variables['full_name'] = $user->get('field_first_name')->value . ' ' . $user->get('field_last_name')->value;

  // get URL alias, example: http://courthouseregular-d11.ddev.site/users/mary-mcneill
  // get path: /users/mary-mcneill
  // find UID that belongs to that URL
  // Load user
  // get the "Receive Assignment" data, ex: /user/7025/recieve_assignments
  // $variables["assignments"] = "Test";
  $url = \Drupal\Core\Url::fromRoute('<current>');
  $user_path = $url->toString(); 
  $internal_path = $url->getInternalPath();

  $user_path = explode("/", $internal_path);

  if (($user_path[0] == "user") && is_numeric($user_path[1])) {
    $user = User::load($user_path[1]);

  $list = \Drupal::entityTypeManager()
    ->getStorage('profile')
    ->loadByProperties([
      'uid' => $user->id(),
      'type' => 'recieve_assignments',
    ]);

    if (!is_null($list)) {
      foreach ($list as $key => $value) {
        $variables["name_firm"] = $list[$key]->get('field_receive_name_of_law_firm')->value;
        $variables["name_attorney"] = $list[$key]->get('field_receive_supervising_attorn')->value;
        $variables["willing_local_counsel"] = $list[$key]->get('field_willing_to_act_as_local_co')->value;
        $variables["willing_handle_depositions"] = $list[$key]->get('field_willing_to_handle_depositi')->value;
        $variables["street_address"] = $list[$key]->get('field_receive_street_address')->value;
        $variables["city_town"] = $list[$key]->get('field_receive_city_or_town')->value;
        $variables["zip_code"] = $list[$key]->get('field_zip_code_receive')->value;
        $variables["linkedin_profile"] = $list[$key]->get('field_link_to_linkedin_profile')->value;
        $variables["website"] = $list[$key]->get('field_website_url')->value;
        $variables["my_legal_work"] = $list[$key]->get('field_about_my_practice')->value;

        $field = $list[$key]->get('field_states_and_territories');

        if (!$field->isEmpty()) {
          $termEntity = $list[$key]->get('field_states_and_territories')->entity;

          if ($termEntity instanceof \Drupal\taxonomy\TermInterface) {
            $aliasManager = \Drupal::service('path_alias.manager');
            $term_alias = $aliasManager->getAliasByPath('/taxonomy/term/' . $termEntity->id());
            $state_territory = $termEntity->label();
            $variables["state_territory"] = "<a href='" . $term_alias . "'>" . $state_territory . "</a>";
          }
        }
        else {
          $variables["state_territory"] = "";
        }

        $counties_courthouses_courts = $list[$key]->get('taxonomy_vocabulary_4')->referencedEntities();

        if (count($counties_courthouses_courts)) {
          $terms_profile = "<p>";

          foreach ($counties_courthouses_courts as $term) {
            $tid = $term->id();
            $name = $term->getName();
            $parents = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($tid);
            $terms_profile_line = [];
            $terms_profile_line[] = $name;

            while (count($parents)) {
              foreach ($parents as $parent_tid => $parent_term_object) {
                $terms_profile_line[] = $parent_term_object->getName();
                
                $ptid = $parent_term_object->id();
                $parents = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($ptid);
              }
            }

            $terms_profile_line = array_reverse($terms_profile_line);
            $terms_profile_line[count($terms_profile_line) - 1] = "<strong>" . $terms_profile_line[count($terms_profile_line) - 1] . "</strong>";
            $terms_profile .=  implode(" > ", $terms_profile_line) . "<br />";
          }

          $variables["counties_courthouses_courts"] = $terms_profile ;
        }
        else {
          $variables["counties_courthouses_courts"] = "";
        } 
      }
    }
  }
}